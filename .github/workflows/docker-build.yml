name: Docker Build and Push

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./KaidAPI
          file: ./KaidAPI/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Package Helm chart
        run: |
          helm package ./helm/kaidapi
          helm repo index .

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: kaidapi-*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Kubernetes
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          helm upgrade --install kaidapi ./helm/kaidapi \
            --set secrets.database.connectionString="${{ secrets.MYSQL_CONNECTION_STRING }}" \
            --set secrets.openIdConnect.authority="${{ secrets.OPENID_AUTHORITY }}" \
            --set secrets.openIdConnect.clientSecret="${{ secrets.OPENID_CLIENT_SECRET }}" \
            --set secrets.openIdConnect.clientId="${{ secrets.OPENID_CLIENT_ID }}" \
            --set secrets.openIdConnect.issuer="${{ secrets.OPENID_ISSUER }}" 